on: push
name: ðŸš€ Deploy application to server
jobs:
  docker-deploy:
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v3

      - name: ðŸ¥” Upload to server
        uses: appleboy/scp-action@v0.1.7
        if: ${{ startsWith(github.event.head_commit.message, '[DEPLOY]') }}
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          target: ${{ secrets.REMOTE_TARGET }}
          source: "*"

      - name: ðŸš€ Setup Docker
        uses: appleboy/ssh-action@v1.0.3
        if: ${{ startsWith(github.event.head_commit.message, '[DEPLOY]') }}
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd ${{ secrets.REMOTE_TARGET }}
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" > .env && echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env && echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env && echo "LOG_DIR=/var/log/dormhub" >> .env && echo "LOG_LEVEL=WARNING" >> .env && echo "MAX_LOGS=5" >> .env && echo "TOKEN_HEADER_KEY=Authorization" >> .env && echo "TOKEN_HOURS=${{ secrets.TOKEN_HOURS }}" >> .env && echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env && echo "PASSWORD_PEPPER=${{ secrets.PASSWORD_PEPPER }}" >> .env && echo "FTP_USER=${{ secrets.FTP_USER }}" >> .env  && echo "FTP_FULLLOGIN=${{ secrets.FTP_FULLLOGIN }}" >> .env
            docker compose down
            docker compose up --build -d